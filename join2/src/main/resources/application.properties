# 서버 포트 번호
server.port=8086

# 인코딩
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.force-response=true
server.servlet.encoding.enabled=true

# 오라클 DATABASE
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=service
spring.datasource.password=12345

# 로그
logging.level.org.hibernate=info

# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
logging.level.org.thymeleaf=DEBUG
# JPA
## 엔티티를 기준으로 테이블을 생성하는 규칙 정의
### none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않는다.
### update - 엔티티의 변경된 부분만 적용한다.
### validate - 변경사항이 있는지 검사만 한다.
### create - 스프링부트 서버가 시작될때 모두 drop하고 다시 생성한다.
### create-drop - create와 동일하다. 하지만 종료시에도 모두 drop 한다.
spring.jpa.hibernate.ddl-auto=update
## 실행되는 쿼리를 확인하기
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
# 소스파일에 변화가 있을 때 자동으로 서버 재시작 설정
spring.devtools.restart.enabled=true

# 디버그 활성화
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace



